#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define FN1 1

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td_shift: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // Base layer
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |NUHS| ENTER   |
            // | SHIFT |NUBS| Z |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |    Shift   | FN |
            // |  LCTL  |  LWIN  |  LALT  | SPACE  | SPACE |    SPACE   |  RALT | FN  |   RWIN  | RCTRL |
            // | Rotary | (<-- Rotary switch) ----------------------------------------------------------- 

            bindings = <
&kp GRAVE         &kp N1          &kp N2          &kp N3            &kp N4          &kp N5     &kp N6  &kp N7       &kp N8             &kp N9          &kp N0              &kp MINUS  &kp EQUAL  &kp BACKSLASH  &kp C_PLAY_PAUSE
&kp TAB           &kp Q           &kp W           &kp E             &kp R           &kp T      &kp Y   &kp U        &kp I              &kp O           &kp P               &kp LBKT   &kp RBKT   &kp BACKSPACE
&mt LCTRL ESCAPE  &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LCTRL F     &kp G      &kp H   &hm LCTRL J  &hm RIGHT_SHIFT K  &hm LEFT_ALT L  &hm RIGHT_GUI SEMI  &kp SQT    &none      &kp RET
&td_shift         &none           &kp Z           &kp X             &kp C           &kp V      &kp B   &kp N        &kp M              &kp COMMA       &kp DOT             &kp FSLH   &kp RSHFT  &mo FN1
&kp LCTRL         &kp LGUI        &mo 2           &kp SPACE         &hm RALT SPACE  &kp SPACE  &none   &mo 2        &mo 3              &kp RCTRL
&none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        fn_layer {
            // Function layer
            // ------------------------------------------------------------------------------------------
            // | RESET | F1 |  F2 |  F3 |  F4 |  F5 |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |TRNS | DEL |
            // |BT_CLR |TRNS | UP  | BT0 | BT1 | BT2 | BT3 | BT4 | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS|
            // | BOOTL  |LEFT |DOWN |RIGHT|TRNS |TRNS |TRNS | TRNS| TRNS |TRNS| TRNS |TRNS | TRNS | TRNS  |
            // | TRNS |TRNS|TRNS|TRNS|TRNS | TRNS| TRNS | TRNS |  TRNS| TRNS | TRNS| TRNS |   TRNS   |TRNS|
            // |  TRNS | TRNS | TRNS |      TRNS      | TRNS |     TRNS     |  TRNS |  TRNS | TRNS | TRNS |
            // | Rotary | (<-- Rotary switch) ----------------------------------------------------------- 

            bindings = <
&sys_reset  &kp F1    &kp F2           &kp F3           &kp F4           &kp F5           &kp F6           &kp F7           &kp F8           &kp F9       &kp F10    &kp F11    &kp F12  &trans      &trans
&bt BT_CLR  &kp HOME  &kp UP           &kp END          &trans           &bt BT_PRV       &bt BT_NXT       &trans           &trans           &trans       &kp HOME   &kp UP     &kp END  &kp DELETE
&trans      &kp LEFT  &kp DOWN         &kp RIGHT        &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &kp PG_UP    &kp LEFT   &kp RIGHT  &trans   &trans
&trans      &trans    &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans       &kp PG_DN  &kp DOWN   &trans   &trans
&trans      &trans    &trans           &trans           &trans           &trans           &trans           &trans           &trans           &bootloader
&kp C_PP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        navim_layer {
            bindings = <
&trans      &kp F1     &kp F2           &kp F3           &kp F4     &kp F5           &kp F6    &kp F7         &kp F8         &kp F9     &kp F10        &kp F11     &kp F12  &trans  &trans
&kp GRAVE   &trans     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_N9  &trans           &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP    &kp END    &kp DELETE     &trans      &trans   &trans
&caps_word  &kp KP_N0  &kp KP_N4        &kp KP_NUMBER_5  &kp KP_N6  &kp KP_N0        &kp LEFT  &kp DOWN       &kp UP         &kp RIGHT  &kp BACKSPACE  &trans      &trans   &trans
&trans      &trans     &trans           &kp KP_NUMBER_1  &kp KP_N2  &kp KP_NUMBER_3  &trans    &kp HOME       &kp PAGE_DOWN  &kp PG_UP  &kp END        &kp DELETE  &trans   &trans
&trans      &trans     &trans           &trans           &trans     &trans           &trans    &trans         &trans         &trans
&trans
            >;
        };

        num_layer {
            bindings = <
&trans  &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans   &trans  &trans  &trans
&trans  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &trans   &trans  &trans
&trans  &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &trans   &trans  &trans
&trans  &trans      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6      &kp F7      &kp F8      &kp F9      &kp F10  &trans  &trans
&trans  &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
&trans
            >;
        };
    };
};
